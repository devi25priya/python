#instead of switchcase ---->matchcase
'''day = 6
match day:
    case 1:
        print("Monday")
    case 2:
        print("tuesday")
    case 3:
        print("wednesday")
    case 4:
        print("thursday")
    case 5:
        print("friday")
    case 6:
        print("saturday")
    case 7:
        print("sunday")
    case _:
        print("looking forward for the weekend")'''
    
#if else
'''marks=int(input("Enter the marks"))
if marks>=95:
    print("O grade")
elif marks>=90 and marks<95:
    print("A+")
elif marks>=80 and marks<=40:
    print("A grade")
elif marks<40:
    print("F grade")
else:
    print("Invalid marks")   '''  ####in terminal

#for loop
'''for i in range(3,151):
    print(i)
for i in range(6,66):
    print(i)'''

#while loop
'''while True:
    x=int(input("Enter the number to print:"))
    if x==0:
        break
    print(x)
    print("Enter 0 to break")'''
'''for i in range(1,100):
    if (i%2!=0):    #it will give odd #if(i%2==0): it will print even
        continue
    print(i)'''
'''for i in range(1,100):
    if (i%2!=0):    
        pass    # is place holder
    print(i)'''

'''#functions and modules
import math
import random
print(math.sqrt(144))              #12.0
print(math.floor(5.9))             #5
print(math.ceil(5.1))              #6           
print(random.randint(1,10))        #5                  #10 can come
print(random.randrange(1,11))   '''   #2                  #11 wont come

'''##########calcu.py is importing here..
import calcu
calcu.add(3,5)
calcu.sub(9,2)'''

#types of arguments
''''def greet(student,trainer):
    print(f"good morning  {trainer}")    
    print(f"welcome  {student}")    #      greet("subha","manusree")     #positional arguments---->depends on position
greet(trainer="Subha",student="manya") ''' #keyword argument
#variable length argument
'''def print_num(*args):
    for i in args:
        print(i)
print_num(5,6,7,8,9,10,1,2,3,23,2,3,4,1,1,243)'''     # stored in list
'''def print_num(**kwargs):
    for i in kwargs.keys():
        print(i)
    for i in kwargs.values():
        print(i)
    for k,v in kwargs.items():
        print(f"keys {k}: values {v}")
print_num(Trainer="govinthan",student1="yasssh",student2="liku",student3="manu",grade=True,marks=9.5) '''   #stored in dictionaries
#         #          have done the GUESS game with if else and elif statements

# class in python
class student:   #constructor is a function of class which is called immedietely after creating object (automatically)
    def __init__(self,student_name,usn_no,course):   #  this part is constructor
        self.student_name=student_name
        self.usn_no=usn_no
        self.course=course
    def print_details(self):
          print(f'''name={self.student_name}  usn_no={self.usn_no}  course={self.course}''')
yash=student("yash",12345,"python")
dala=student("dala",56789,"javascript")
tvis=student("tvis",15678,"c++")
yash.print_details()
dala.print_details()
tvis.print_details()


#################
################CALCULATOR############################


'''def add(a,b):
    print(a+b)
def sub(a,b):
    print(a-b)'''



###################################GAME      if else   ####################################
'''import random 
number=random.randint(1,20)
while(True):
    guess=int(input("Enter your guess"))
    if guess>number:
        print("Your GUESS IS HIGHER,TRY LOWER")
    else:
        print("Your GUESS IS LOWER,TRY HIGHER")
    if guess==number:
        print("CONGRATULATIONS YOU WON!!!!")
        break'''

#####    ELIF 
import random 
number=random.randint(1,200)
while(True):
    guess=int(input("Enter your guess"))
    if guess>number:
        print("Your GUESS IS HIGHER,TRY LOWER")
    elif guess<number:
        print("Your GUESS IS LOWER,TRY HIGHER")
    elif guess==number:
        print("CONGRATULATIONS YOU WON!!!!")
        break





What will be the output of the following code?

```
x = "5"
y = 3
print(x * y)
```

*
2/2
15
555
 
Error: Can't multiply string and int
5 * 3
 
2.     Which of the following will not cause a syntax error in Python?

*
2/2
print("Hello", end="\n")
 
a === b
def 123func():
if (4 > 2)
 
3.      Which data type is immutable?
*
2/2
Tuple
 
List
Set
Dictionary
 
4.      What is the output of the following?

```
def calc(x):
    return x + 10

print(calc(5), calc('5'))
```

*
2/2
15, Error
 
15, 510
15, 15
Error, 510
 
5.What is the output of the following code?
   a = 10
   if a > 5:
       print("High")
   else:
       print("Low")
*
2/2
Low
High
 
Continue
Nothing
 
6.      Which keyword is used to skip the current iteration in a loop?
*
2/2
continue
 
break
pass
skip
 
7.What does a return statement do in a Python function?

*
2/2
Terminates function and sends value back
 
None of the above
Defines output variable
Prints a value
 
8.What is the output of this function?
    def add(a, b=5): return a + b; print(add(3))

*
2/2
3
Error
5
8
 
 
9.     . Which method adds multiple elements to a list?
*
2/2
append()
extend()
 
B. insert()
add()
 
10.Predict the output:


def fun(x, y=2):
    return x * y

print(fun(3))
print(fun(3, 3))

*
2/2
6 8
6 10
6 9
 
9 6
 
11.    Output of:


x = [1, 2, 3]
y = x[:]
y.append(4)
print(x)
print(y)


*
2/2
[1, 2, 3] [1, 2, 3, 4,5,6]
[1, 2, 3] [1, 2, 3, 4]
 
[1, 3] [1, 4]
[1, 2, 3,4,5,6] [1, 2, 3, 4]
 
12.Which of the following statements is true about Python loops?

*
2/2
Python supports only while loops
Python uses `for` and `while` loops
 
Python doesn't support loops
Python uses `for` and `foreach`
 
13.Choose the correct OOP concept applied here:


class A:
    def speak(self):
        print("A speaks")

class B(A):
    def speak(self):
        print("B speaks")

obj = B()
obj.speak()

*
0/2
Polymorphism
Both Inheritance and Polymorphism
Encapsulation
Inheritance
 
 
14.  What is the output of the following code?

print(type({}))


*
0/2
. <class 'list'>
<class 'set'>
 
<class 'dict'>
<class 'tuple'>
 
15.What will the following print?

class Demo:
    def __init__(self, x):
        self.__x = x

    def show(self):
        print(self.__x)

d = Demo(10)
d.show()
print(d._Demo__x)


*
2/2
10 10
 
40 40
30 30
20 20
 
16.Which of the following will not cause a syntax error in Python?

*
2/2
.a === b
print("Hello", end="\n")
 
if (4 > 2)
def 123func():
 
16.What is the output of the following?


def calc(x):
    return x + 10

print(calc(5), calc('5'))
*
2/2
Error,510
15,Error
 
15,510
15,15
 
18.What will be the output of this code?


i = 0
while i < 3:
    i += 1
    if i == 2:
        continue
    print(i)


*
2/2
1 2 3
1 3
 
1 2
0 1 2
 
19.What does the `len()` function return for a set with duplicate values?


s = {1, 2, 2, 3}
print(len(s))


*
2/2
4
3
 
2
Error
 
20.   What is the result of `bool([])` in Python?

*
0/2
True
False
Error
 
both True and False
 
21.What is the output of the following program:
class Demo:
    def __init__(self, val):
        self.value = val

    def show(self):
        print(self.value * 2)

obj = Demo(5)
obj.show()
*
2/2
10
 
5
6
8
 
22.What is the OutPut :

class Test:
    count = 0

    def __init__(self):
        Test.count += 1

a = Test()
b = Test()
c = Test()
print(Test.count)
*
2/2
1
5
6
3
 
 
  23. What is the output of the following code?

class A:
    def greet(self):
        print("Hello from A")

class B(A):
    def greet(self):
        print("Hello from B")

class C(A):
    def greet(self):
        print("Hello from C")

class D(B, C):
    pass

d = D()
d.greet()
  
*
2/2
Hello from A
Hello from B
 
Hello from C
Hello from D
 
  24.What is the output of this code?
class Counter:
    def __init__(self, limit):
        self.limit = limit

    def count_up(self):
        for i in range(1, self.limit + 1):
            print(i, end=' ')

c = Counter(3)
c.count_up()
  
*
2/2
123
 
012
12
Error
 
25.What will be printed?
class Multiply:
    def table(self, num):
        for i in range(1, 4):
            print(num * i, end=' ')

Multiply().table(2)
*
2/2
234
123
369
246
 








